# Все начинается с определения списка. 
# Затем определяется цикл for.
# С помощью этой строки Python получает указание — взять очередное имя из списка
# и сохранить его в переменной magician. Далее выводится имя, только что сохраненное 
# в переменной magician. Затем строки повторяются для каждого имени в списке.
# Этот код можно описать так: «Для каждого фокусника в списке вывести его имя».
# Результат представляет собой простой перечень имен из списка:
magicians = ['alice', 'david', 'carolina']
for magician in magicians:
    print(magician)
print()

# Подробнее о циклах 

# Концепция циклов очень важна, поскольку она представляет один из основных 
# способов автоматизации повторяющихся задач компьютером. Например, в простом 
# цикле, использованном в magicians.py, Python сначала читает первую строку цикла:
# for magician in magicians:
# Эта строка означает, что нужно взять первое значение из списка magicians и сохранить его в переменной magician. 
# Первое значение в списке — 'alice'. Затем Python читает следующую строку:

# print(magician)

# Python выводит текущее значение magician , которое все еще равно 'alice'. Так как 
# в списке еще остались другие значения, Python возвращается к первой строке цикла:
# for magician in magicians:
# Python берет следующее значение из списка, 'david', и сохраняет его в magician.
# Затем выполняет строку:

# print(magician)

# Python снова выводит текущее значение magician; теперь это строка 'david'. Весь
# цикл повторяется еще раз с последним значением в списке, 'carolina'. Так как
# других значений в списке не осталось, Python переходит к следующей строке в программы. 
# В данном случае после цикла for ничего нет, поэтому программа просто завершается.

# Выполнение действий после цикла for
# 
# Что происходит после завершения цикла for? Обычно программа выводит некую
# сводную информацию или переходит к другим операциям.
# Каждая строка кода после цикла for, не имеющая отступа, выполняется без повторения. 
# Допустим, вы хотите вывести сообщение для всей группы фокусников и поблагодарить их за превосходное представление. 
# Чтобы вывести общее сообщение после всех отдельных, поместите его после цикла for , не делая отступа:

magicians = ['alice', 'david', 'carolina']
for magician in magicians:
    print(f"{magician.title()}, that was a great trick!")
    print(f"I can't wait to see your next trick, {magician.title()}.\n")
print("Thank you, everyone. That was a great magic show!")

# Первые два вызова функции print() повторяются по одному разу для каждого
# фокусника в списке, как было показано ранее. Но поскольку последняя строка
# не имеет отступа, это сообщение выводится только раз:

# Alice, that was a great trick!
# I can't wait to see your next trick, Alice.
# David, that was a great trick!
# I can't wait to see your next trick, David.
# Carolina, that was a great trick!
# I can't wait to see your next trick, Carolina.
# Thank you, everyone. That was a great magic show!

# При обработке данных в циклах for завершающее сообщение позволяет подвести
# итог операции, выполненной со всем набором данных. Например, цикл for может