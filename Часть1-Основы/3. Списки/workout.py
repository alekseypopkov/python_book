# УПРАЖНЕНИЯ 
# 
# Следующие упражнения немного сложнее, но дают возможность попрактиковаться в выполнении всех описанных операций со списками. 
# 3.4. Список гостей. Если бы вы могли пригласить на обед кого угодно (из живых или умерших), то кто бы это был? Создайте список минимум из трех человек. 
# Затем используйте его для вывода пригласительного сообщения каждому участнику.

guests = []
guests.append('федя')
guests.append('вася')
guests.append('катерина')
print(guests)
print(f"\n\tУважаемый(ая) {guests[0].title()} приглашаю Вас тра-та-та")
print(f"\n\tУважаемый(ая) {guests[1].title()} приглашаю Вас тра-та-та")
print(f"\n\tУважаемый(ая) {guests[2].title()} приглашаю Вас тра-та-та")

# 3.5. Изменение списка гостей. Вы только что узнали, что один из гостей не сможет прийти, поэтому вам придется разослать новые приглашения. Отсутствующего 
# гостя нужно заменить кем-то другим. • Начните с программы из упражнения 3.4. Добавьте в конец кода вызов функции print() для вывода имени гостя, 
# который не сможет прийти. 
#         Измените список и замените имя гостя, который прийти не сможет, именем нового приглашенного.
#         Выведите новый набор сообщений с приглашениями — по одному для каждого участника, входящего в список.

print(f"\n\t{guests[1].title()} не сможет явиться на торжество")
guests[1] = 'петя'
print(guests)
print(f"\n\tУважаемый(ая) {guests[0].title()} приглашаю Вас тра-та-та")
print(f"\n\tУважаемый(ая) {guests[1].title()} приглашаю Вас тра-та-та")
print(f"\n\tУважаемый(ая) {guests[2].title()} приглашаю Вас тра-та-та")

# 3.6. Больше гостей. Вы решили купить обеденный стол большего размера. 
# Дополнительные места позволяют пригласить на обед еще трех гостей.
# 
# • Начните с программы из упражнения 3.4 или 3.5. Добавьте в конец кода вызов 
# функции print() для вывода сообщения о том, что вы нашли стол большего размера. 
print("\n3.6 нашелся стол большего размера\nПриглашу еще троих друзей.\n")
# • Добавьте вызов insert() для добавления одного нового гостя в начало списка.
guests.insert(0, 'степан')
# • Добавьте вызов insert() для добавления одного нового гостя в середину списка.
guests.insert(2, 'анна')
# • Добавьте вызов append() для добавления одного нового гостя в конец списка.
guests.append('николай')
# • Выведите новый набор сообщений с приглашениями — по одному для каждого
# участника, входящего в список.
print(guests)
print(f"\n\tУважаемый(ая) {guests[0].title()} приглашаю Вас тра-та-та")
print(f"\n\tУважаемый(ая) {guests[1].title()} приглашаю Вас тра-та-та")
print(f"\n\tУважаемый(ая) {guests[2].title()} приглашаю Вас тра-та-та")
print(f"\n\tУважаемый(ая) {guests[3].title()} приглашаю Вас тра-та-та")
print(f"\n\tУважаемый(ая) {guests[4].title()} приглашаю Вас тра-та-та")
print(f"\n\tУважаемый(ая) {guests[5].title()} приглашаю Вас тра-та-та")

# 3.7. Сокращение списка гостей. Только что выяснилось, что новый обеденный 
# стол привезти вовремя не успеют и места хватит только для двух гостей. 
# ••••Начните с программы из упражнения 3.6. Добавьте команду для вывода 
# сообщения о том, что на обед приглашаются всего два гостя.

print("\nСтол не успевают доставить. Приглашаются всего 2 гостя.")

# Используйте метод pop() для последовательного удаления гостей из списка 
# до тех пор, пока в нем не останутся только два человека. Каждый раз, когда 
# из списка удаляется очередное имя, выведите для этого человека сообщение 
# о том, что вы сожалеете об отмене приглашения. 
 
del_guest6 = guests.pop()
print(f"\n{del_guest6.title()} приглашение отмняется. Я очень сожалею.")
del_guest5 = guests.pop()
print(f"\n{del_guest5.title()} приглашение отмняется. Я очень сожалею.")
del_guest4 = guests.pop()
print(f"\n{del_guest4.title()} приглашение отмняется. Я очень сожалею.")
del_guest3 = guests.pop()
print(f"\n{del_guest3.title()} приглашение отмняется. Я очень сожалею.")
print()
print(guests)
# Выведите сообщение для каждого из двух человек, остающихся в списке. 
# Оно должно подтверждать, что более раннее приглашение остается в силе. 

print(f"\n\tУважаемый(ая) {guests[0].title()} приглашение остается в силе.")
print(f"\n\tУважаемый(ая) {guests[1].title()} приглашение остается в силе.")
# Используйте оператор del для удаления двух последних имен, чтобы список 
# остался пустым. Выведите список, чтобы убедиться в том, что в конце работы 
# программы список действительно не содержит ни одного элемента.

del guests[1]
del guests[0]
print(f"\nСписок гостей пуст\nguests = {guests}")